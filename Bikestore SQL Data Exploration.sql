--Data exploration of Bikestore with SQL 

--Skills: Aggregate functions, CASE, subqueries



SELECT * 
FROM Bikestore



--General sales stats - total revenue, total units sold, total units, number of sales representatives
SELECT SUM(revenue) AS Total_revenue, SUM(total_units) AS Total_units_sold, COUNT(DISTINCT order_id) AS Orders,
COUNT(DISTINCT customers) AS Customers, COUNT(DISTINCT sales_rep) AS Salesreps 
FROM Bikestore


--General stores data - Number of cities, states, different products, categories, brands and stores
SELECT COUNT(DISTINCT city) AS Cities,COUNT(DISTINCT state) AS States,COUNT(DISTINCT product_name) AS Products, COUNT(DISTINCT category_name) AS Categories,
COUNT(DISTINCT brand_name) AS Brands,COUNT(DISTINCT store_name) AS Stores
FROM Bikestore


--Total revenue per year
SELECT year, SUM(revenue) AS total_revenue 
FROM Bikestore
GROUP BY year
ORDER BY total_revenue DESC


--Total revenue and sold units per month
SELECT month, SUM(revenue) AS total_revenue, SUM(total_units) AS unit_sold
FROM Bikestore
GROUP BY month
ORDER BY total_revenue DESC

--Total revenue generated in each store
SELECT store_name, SUM(revenue) AS total_revenue, SUM(total_units) AS unit_sold
FROM Bikestore
GROUP BY store_name
ORDER BY total_revenue DESC


--Total revenue generated in each city (limited to 10 best)
SELECT TOP 10  city ,state, SUM(revenue) AS total_revenue, SUM(total_units) AS sold_units
FROM Bikestore
GROUP BY city, state
ORDER BY total_revenue DESC


--Total revenue generated by the brand
SELECT brand_name, SUM(revenue) AS total_revenue, SUM(total_units) AS sold_units
FROM Bikestore
GROUP BY brand_name
ORDER BY total_revenue DESC

--Grouping by season
SELECT 
	CASE
		WHEN month IN ('Dec', 'Jan', 'Feb') THEN 'Winter'
		WHEN month IN ('Mar', 'Apr', 'May') THEN 'Spring'
		WHEN month IN ('Jun', 'Jul', 'Aug') THEN 'Summer'
		ELSE 'Autumn'
	END AS season,
	SUM(revenue) AS Total_revenue,
	SUM(total_units) AS Total_units_sold
FROM Bikestore
GROUP BY 
	CASE
		WHEN month IN ('Dec', 'Jan', 'Feb') THEN 'Winter'
		WHEN month IN ('Mar', 'Apr', 'May') THEN 'Spring'
		WHEN month IN ('Jun', 'Jul', 'Aug') THEN 'Summer'
		ELSE 'Autumn'
	END
ORDER BY Total_revenue DESC;


--Grouping by season using subquery
SELECT
    season,
    SUM(revenue) AS Total_revenue,
    SUM(total_units) AS Total_units_sold
FROM
    (
        SELECT
            CASE
                WHEN month IN ('Dec', 'Jan', 'Feb') THEN 'Winter'
                WHEN month IN ('Mar', 'Apr', 'May') THEN 'Spring'
                WHEN month IN ('Jun', 'Jul', 'Aug') THEN 'Summer'
                ELSE 'Autumn'
            END AS season,
            revenue,
            total_units
        FROM
            Bikestore
    ) AS subquery
GROUP BY
    season
ORDER BY
    Total_revenue DESC;